{{- range $key, $value := .Values.frontend }}
{{- if and $value.loadBalancer $value.loadBalancer.enabled (eq $value.loadBalancer.type "preexisting") }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $value.name }}-service
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: {{ $value.name }}
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: {{ $.Release.Name | quote }}
spec:
  type: NodePort
  ports:
  - name: http
    targetPort: {{ $value.port }} # Port that the container listens on
    port: {{ $value.port }} # Port that the service listens on
  selector:
    app.kubernetes.io/name: {{ $value.name }}
    app.kubernetes.io/component: web
    app.kubernetes.io/part-of: {{ $.Release.Name | quote }}
---
apiVersion: elbv2.k8s.aws/v1beta1
kind: TargetGroupBinding
metadata:
  name: {{ $value.name }}-tgb
  namespace: {{ $.Release.Namespace | quote }}
spec:
  serviceRef:
    name: {{ $value.name }}-service # route traffic to the created service
    port: {{ $value.port }}
  targetGroupARN: {{ $value.loadBalancer.targetGroupARN }}
  networking:
    ingress:
    - from: 
      - securityGroup:
          groupID: {{ $value.loadBalancer.securityGroupID }}
      ports:
      - protocol: TCP
      - port:
{{- end }}
{{- end }}